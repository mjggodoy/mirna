1. MicroT_CDS
	1.1	Ejecutar MicroTCdsDataMiRNA
	1.2 Ejecutar MicroTCdsDataGene
	1.3 Ejecutar MicroTCdsDataGeneTranscript
	<Descartado MicroTCdsDataMiRNAInteractionData
	1.4 Creada tabla microt_cds_pk desde microt_cds
UPDATE mirna_raw.microt_cds_pk SET transcript_pk=(SELECT pk FROM mirna.transcript WHERE mirna.transcript.id=mirna_raw.microt_cds_pk.transcript_id);
	1.5 Insertar Target:
insert into mirna.target (pk, region, chromosome, coordinates, transcript_pk)
select target_pk, region, chromosome, coordinates, transcript_pk from mirna_raw.microt_cds_pk;
	1.6 Insertar InteractionData:
insert into mirna.interaction_data (mitg_score, target_pk, mirna_pk, gene_pk, provenance)
select mitg_score, target_pk, mirna_pk, gene_pk, "microT_CDS" from mirna_raw.microt_cds_pk;

2. MicroTV4
	2.1 Ejecutar MicroTV4MiRNA
	
	
	SELECT t1.mirna
FROM
    mirna_raw.microtv4 t1
    LEFT JOIN mirna.mirna t2
        ON t1.mirna = t2.name
        where
        t1.pk is not null
        and t2.pk is null;
	
2. MicroTV4

	2.1. Ejecutar MicroTV4MiRNA

UPDATE mirna_raw.microtv4_pk SET mirna_pk=(SELECT pk FROM mirna.mirna WHERE mirna.mirna.name=mirna_raw.microtv4_pk.mirna);

	2.2 Ejecutar MicroTV4Gene
	
UPDATE mirna_raw.microtv4_pk SET gene_pk=(SELECT pk FROM mirna.gene WHERE mirna.gene.name=mirna_raw.microtv4_pk.gene_id);
	
	2.3 Ejecutar MicroTV4Transcript
	
UPDATE mirna_raw.microtv4_pk SET transcript_pk=(SELECT pk FROM mirna.transcript WHERE mirna.transcript.id=mirna_raw.microtv4_pk.transcript_id);

	2.4 Ejecutar MicroTV4Target
	
	2.5 Comprobar si hay mirnas que no estŽn inclu’dos
	
	SELECT t1.mirna
FROM mirna_raw.microtv4 t1
LEFT JOIN mirna.mirna t2
ON t1.mirna = t2.name
    where
    t1.pk is not null
    and t2.pk is null;
    
    2.6 Comprobar si hay genes que no estŽn inclu’dos
    
    	SELECT t1.gene_id
FROM mirna_raw.microtv4 t1
LEFT JOIN mirna.gene t2
ON t1.gene_id = t2.name
    where
    t1.pk is not null
    and t2.pk is null;
    
    2.7 Comprobar si hay transcripts que no est‡n inclu’dos
    
    SELECT t1.transcript_id
FROM mirna_raw.microtv4 t1
LEFT JOIN mirna.transcript t2
ON t1.transcript_id = t2.id
    where
    t1.pk is not null
    and t2.pk is null;
    
    2.8// Actualizar mirna_raw.microtv4_ok
    
    UPDATE mirna_raw.microtv4_pk SET gene_pk=(SELECT pk FROM mirna.gene WHERE mirna.gene.name=mirna_raw.microtv4_pk.gene_id and mirna_raw.microtv4_pk.gene_pk is null);
    UPDATE mirna_raw.microtv4_pk SET gene_pk=(SELECT pk FROM mirna.gene WHERE mirna.gene.name=mirna_raw.microtv4_pk.gene_id);
    
    2.9 // Actualizar mirna_raw.microtv4_ok
    
    UPDATE mirna_raw.microtv4_pk SET transcript_pk=(SELECT pk FROM mirna.transcript WHERE mirna.transcript.id=mirna_raw.microtv4_pk.transcript_id and mirna_raw.microtv4_pk.transcript_pk is null);
    UPDATE mirna_raw.microtv4_pk SET transcript_pk=(SELECT pk FROM mirna.transcript WHERE mirna.transcript.id=mirna_raw.microtv4_pk.transcript_id);
    
	3.0 pk de target (autoincrement)
	
	SET @a:=32400362;
	UPDATE mirna_raw.microtv4_pk SET target_pk=@a:=@a+1;

	3.1 Target-transcript
	
	insert into mirna.target (pk, region, chromosome, coordinates, transcript_pk)
select target_pk, region, chromosome, coordinates, transcript_pk from mirna_raw.microtv4_pk;
	
	3.2 InteractionData
	
	insert into mirna.interaction_data (mitg_score, target_pk, mirna_pk, gene_pk, provenance)
select mitg_score, target_pk, mirna_pk, gene_pk, "microTv4" from mirna_raw.microtv4_pk;

4. RepTar_human

	  4.1 Copiar base de datos de RepTar_human a ReptarHuman_pk.
	  
	  4.2 Crear columnas pks para mirna, gene, target, transcript e interaction_data.
	  
	  4.3 Comprobar e insertar mirna diferentes con respecto a la columna name de la base de datos mirna.mirna
	  
	  SELECT t1.mirna								
		FROM mirna_raw.repTar_human t1
		LEFT JOIN mirna.mirna t2
		ON t1.mirna = t2.name
    	where
    	t1.pk is not null
    	and t2.pk is null;
    	
	Ejecutar RepRarmiRNA en java para la inserci—n.
	Comprobaci—n de que los datos recuperados estŽn vac’os con la misma consulta anterior:
    
      SELECT t1.mirna
		FROM mirna_raw.repTar_human t1
		LEFT JOIN mirna.mirna t2
		ON t1.mirna = t2.name
    	where
    	t1.pk is not null
    	and t2.pk is null;
    	
    SELECT count(distinct t1.gene_symbol)
		FROM mirna_raw.repTar_mouse t1
		LEFT JOIN mirna.gene t2
		ON t1.gene_symbol = t2.name
		where
		t1.pk is not null
		and t2.pk is null;
	
	Ejecutar RepRarGene en java para la inserci—n.
	Comprobaci—n de que los datos recuperados estŽn vac’os con la misma consulta anterior.
		
	SELECT distinct t1.gene_accesion
	FROM mirna_raw.repTar_mouse t1
	LEFT JOIN mirna.transcript t2
	ON t1.gene_accesion = t2.id
	where
		t1.pk is not null
		and t2.pk is null;
	
	Ejecutar RepRarTranscript en java para la inserci—n.
	Comprobaci—n de que los datos recuperados estŽn vac’os con la misma consulta anterior.
    
	UPDATE mirna_raw.repTar_human_pk 
	SET gene_pk=(SELECT pk FROM mirna.mirna WHERE mirna.gene.name=mirna_raw.repTar_human_pk.gene_symbol);
	
	UPDATE mirna_raw.repTar_human_pk 
	SET transcript_pk=(SELECT pk FROM mirna.transcript WHERE mirna.transcript.id=mirna_raw.repTar_human_pk.gene_accesion

5. RepTar_mouse

 	  4.1 Copiar base de datos de RepTar_human a ReptarHuman_pk.
	  
	  4.2 Crear columnas pks para mirna, gene, target, transcript e interaction_data.
	  
	  4.3 Comprobar e insertar mirna diferentes con respecto a la columna name de la base de datos mirna.mirna

	SELECT t1.mirna
	FROM mirna_raw.repTar_mouse t1
	LEFT JOIN mirna.mirna t2
	ON t1.mirna = t2.name
	where
    	t1.pk is not null
    	and t2.pk is null;
    
    Ejecutar RepRarmiRNA en java para la inserci—n.
	Comprobaci—n de que los datos recuperados estŽn vac’os con la misma consulta anterior.
	
	SELECT count(distinct t1.gene_symbol)
	FROM mirna_raw.repTar_mouse t1
	LEFT JOIN mirna.gene t2
	ON t1.gene_symbol = t2.name
	where
		t1.pk is not null
		and t2.pk is null;
		
	Ejecutar RepRarGene en java para la inserci—n.
	Comprobaci—n de que los datos recuperados estŽn vac’os con la misma consulta anterior.
		
		
	SELECT distinct t1.gene_accesion
	FROM mirna_raw.repTar_mouse t1
	LEFT JOIN mirna.transcript t2
	ON t1.gene_accesion = t2.id
	where
		t1.pk is not null
		and t2.pk is null;
	
	
	Ejecutar RepRarTranscript en java para la inserci—n.
	Comprobaci—n de que los datos recuperados estŽn vac’os con la misma consulta anterior.
	
	